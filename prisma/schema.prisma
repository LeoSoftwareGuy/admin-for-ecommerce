generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  userId     String
  billboards Billboard[]
  categories Category[]
  sizes      Size[]
  colors     Color[]
  products   Product[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Billboard {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  storeId    String     @db.ObjectId
  store      Store      @relation(fields: [storeId], references: [id])
  categories Category[]
  label      String
  imageUrl   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String    @db.ObjectId
  store       Store     @relation(fields: [storeId], references: [id])
  billboardId String    @db.ObjectId
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  products    Product[]
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Size {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String    @db.ObjectId
  store     Store     @relation(fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Color {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String    @db.ObjectId
  store     Store     @relation(fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

// This is specific for the website products

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String   @db.ObjectId
  store       Store    @relation(fields: [storeId], references: [id])
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id])
  sizeId      String   @db.ObjectId
  size        Size     @relation(fields: [sizeId], references: [id])
  colorId     String   @db.ObjectId
  color       Color    @relation(fields: [colorId], references: [id])
  images      Image[]
  name        String
  price       Float // should be decimal in original but prisma ORM does not support this type
  isFeatured  Boolean  @default(false)
  isArchived Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
